/*
**
** ANIMATION CLASSES
**
*/

/*FADE WITH BACK BOUNCE ANIMATIONS â€“ KEYFRAMES IN LOAD-ANIMATIONS.CSS*/

[aa-animate^='float'] {
  animation-delay: var(--aa-delay);
  animation-duration: var(--aa-duration);
  animation-fill-mode: forwards;
  opacity: 0;
}

[aa-animate="float-up"].in-view{ animation-name: floatUp; }
[aa-animate="float-down"].in-view{ animation-name: floatDown; }
[aa-animate="float-left"].in-view{ animation-name: floatLeft; }
[aa-animate="float-right"].in-view{ animation-name: floatRight; }

/*3D SWING ANIMATIONS*/
[aa-animate^='swing'] {
  transform-origin: 50% 0;
  opacity: 0;
}

[aa-animate^='swing'] {
  animation-delay: var(--aa-delay);
  animation-duration: var(--aa-duration);
  animation-fill-mode: forwards;
}

[aa-animate="swing-fwd"].in-view{ animation-name: swing-fwd; }
[aa-animate="swing-bwd"].in-view{ animation-name: swing-bwd; }


/*3D TURN ROTATION ANIMATIONS*/

[aa-animate^='turn-3d']{
  animation-delay: var(--aa-delay);
  animation-duration: var(--aa-duration);
  animation-fill-mode: forwards;
  opacity: 0;
}

[aa-animate="turn-3d-soft"].in-view{ animation-name: turn-3d-soft; }
[aa-animate="turn-3d-soft-3em"].in-view{ animation-name: turn-3d-soft-3em; }
[aa-animate="turn-3d-elliptic"].in-view{ animation-name: turn-3d-elliptic; }



/*ROTATE ANIMATIONS*/

// Define the positions
$rotation-positions: ('br': (100% 100%), 'bl': (0 100%), 'tr': (100% 0), 'tl': (0 0), 'c': (50% 50%));

// Base styles for rotate animations
[aa-animate^='rotate-'] {
  animation-delay: var(--aa-delay);
  animation-duration: var(--aa-duration);
  animation-fill-mode: forwards;
  opacity: 0;
}

// Generate keyframes and animations for each position
@each $pos, $origin in $rotation-positions {
  [aa-animate^='rotate-#{$pos}'] {
    transform-origin: $origin;
  }

  // Generate clockwise and counter-clockwise rotations
  @keyframes rotate-#{$pos}-cw {
    from {
      opacity: 0;
      transform: translateY(calc(50px * var(--aa-distance))) 
                rotate(calc(-5deg * var(--aa-distance, 1)));
    }
    to {
      opacity: 1;
      transform: translateY(0) rotate(0deg);
    }
  }

  @keyframes rotate-#{$pos}-ccw {
    from {
      opacity: 0;
      transform: translateY(calc(50px * var(--aa-distance))) 
                rotate(calc(5deg * var(--aa-distance, 1)));
    }
    to {
      opacity: 1;
      transform: translateY(0) rotate(0deg);
    }
  }

  [aa-animate='rotate-#{$pos}-cw'].in-view {
    animation-name: rotate-#{$pos}-cw;
  }

  [aa-animate='rotate-#{$pos}-ccw'].in-view {
    animation-name: rotate-#{$pos}-ccw;
  }
}


/**
 * ----------------------------------------
 * HOVER CLASSES
 * ----------------------------------------
 */



[aa-hover="shrink-bounce"] {  
  &:hover {
    animation: shrinkBounce;
    animation-duration: var(--aa-duration);
    animation-delay: var(--aa-delay);
  }
}

[aa-hover="grow-bounce"] {  
  &:hover {
    animation: growBounce;
    animation-duration: var(--aa-duration);
    animation-delay: var(--aa-delay);
  }
}
