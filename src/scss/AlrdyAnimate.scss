html {
  // Fix to reduce mobile viewport stuttering
  height: -webkit-fill-available;
}

body {
  // Set initial defaults on 

  --aa-default-duration: 1s;
  --aa-default-delay: 0s;
  --aa-distance: 1;
  --aa-bg-color-initial: var(--background-color--background-page);
  --aa-bg-color-final: var(--background-color--background-alternate);

  // Fix to reduce mobile viewport stuttering
  min-height: 100vh;
  /* mobile viewport bug fix */
  min-height: -webkit-fill-available;
}

// Base styles for all animated elements
[aa-animate], [aa-instant] {
  --aa-duration: var(--aa-default-duration);
  --aa-delay: var(--aa-default-delay);
}

@import 'keyframes';
@import 'animations';
@import 'easing';
@import 'transitions';

// Hide elements with aa-children initially
[aa-children] {
    opacity: 0;
}

// Hide the text animations initially
[aa-animate^="text-"],[aa-animate^="appear"],[aa-animate^="reveal"] {
    visibility: hidden;
}

// Since the text-fade start with 30% opacity, show the element
[aa-animate^="text-fade-soft"] {
    visibility: visible;
}

// clip the text animation to prevent overflow
[aa-split] > .line-clip-wrapper{
    overflow: hidden;
}

// Set the grab cursor for draggable elements
[aa-animate*="draggable"] {
  cursor: grab;
}

// Change to grabbing cursor when dragging
[aa-animate*="draggable"]:active,
[aa-animate*="draggable"]:hover:active {
  cursor: grabbing !important;
}

//Hover animations
[aa-hover] {
  position: relative;
  overflow: hidden;
}

[aa-hover-bg] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

[aa-hover-text-color], [aa-hover-content] {
  position: relative;
  z-index: 1;
}