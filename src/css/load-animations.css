/**
 * AlrdyAnimate Default Settings
 * Customize these variables to change the default animation settings
 */
:root {
  --load-duration: 1s;
  --load-ease: cubic-bezier(0.25, 0.1, 0.25, 1.0);
  --load-distance: 1;
  --load-stagger: 0.1s;
  --load-base-delay: 0.4s;
  --load-delay: var(--load-base-delay);
}

/**
 * Initial Hidden State - prevents FOUC
 * ONLY hide elements that have both aa-load AND aa-animate (hybrid elements)
 * Pure aa-load elements animate immediately without waiting for JS
 * 
 * Important: Use opacity instead of visibility so CSS animations can show the element
 * even if JS never loads. Visibility hidden would keep them hidden forever.
 */
body:not([aa-js-ready]) [aa-load][aa-animate] {
  opacity: 0;
}

/**
 * When JS is ready, it adds aa-js-ready attribute to body
 * Disable CSS animations ONLY for hybrid elements (those with both aa-load and aa-animate)
 * This allows pure aa-load elements to animate normally without JS interference
 * Reset opacity to initial so GSAP can control it from its own initial state
 */
body[aa-js-ready] [aa-load][aa-animate] {
  animation: none !important;
  opacity: initial !important;
}

/**
* Base Animation Settings; applied both on [aa-load] elements as well as children of [aa-load][aa-stagger] elements
* For stagger: exclude hybrid elements (those with aa-animate) - GSAP will handle their stagger
*/
[aa-load], 
[aa-load][aa-stagger]:not([aa-animate]) > * {
  animation-duration: var(--load-duration);
  animation-timing-function: var(--load-ease);
  animation-fill-mode: both;
  animation-delay: var(--load-delay);
}

/* Custom easings */
[aa-load][aa-ease="power4.inOut"]{
	animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
}


/* Stagger values from 0.05 to 0.5 second in 0.05 increments */
[aa-load][aa-stagger="0.05"] { --load-stagger: 0.05s; }
[aa-load][aa-stagger="0.1"] { --load-stagger: 0.1s; }
[aa-load][aa-stagger="0.15"] { --load-stagger: 0.15s; }
[aa-load][aa-stagger="0.2"] { --load-stagger: 0.2s; }
[aa-load][aa-stagger="0.25"] { --load-stagger: 0.25s; }
[aa-load][aa-stagger="0.3"] { --load-stagger: 0.3s; }
[aa-load][aa-stagger="0.35"] { --load-stagger: 0.35s; }
[aa-load][aa-stagger="0.4"] { --load-stagger: 0.4s; }
[aa-load][aa-stagger="0.45"] { --load-stagger: 0.45s; }
[aa-load][aa-stagger="0.5"] { --load-stagger: 0.5s; }

/* Duration values from 0.5 to 1.5 second in 0.1 increments */
[aa-load][aa-duration="0.5"] { --load-duration: 0.5s; }
[aa-load][aa-duration="0.6"] { --load-duration: 0.6s; }
[aa-load][aa-duration="0.7"] { --load-duration: 0.7s; }
[aa-load][aa-duration="0.8"] { --load-duration: 0.8s; }
[aa-load][aa-duration="0.9"] { --load-duration: 0.9s; }
[aa-load][aa-duration="1"] { --load-duration: 1s; }
[aa-load][aa-duration="1.1"] { --load-duration: 1.1s; }
[aa-load][aa-duration="1.2"] { --load-duration: 1.2s; }
[aa-load][aa-duration="1.3"] { --load-duration: 1.3s; }
[aa-load][aa-duration="1.4"] { --load-duration: 1.4s; }
[aa-load][aa-duration="1.5"] { --load-duration: 1.5s; }

/* Delay values from 0 to 2 seconds in 0.1 increments */
[aa-load][aa-delay="0"] { --load-delay: calc(var(--load-base-delay) + 0s); }
[aa-load][aa-delay="0.1"] { --load-delay: calc(var(--load-base-delay) + 0.1s); }
[aa-load][aa-delay="0.2"] { --load-delay: calc(var(--load-base-delay) + 0.2s); }
[aa-load][aa-delay="0.3"] { --load-delay: calc(var(--load-base-delay) + 0.3s); }
[aa-load][aa-delay="0.4"] { --load-delay: calc(var(--load-base-delay) + 0.4s); }
[aa-load][aa-delay="0.5"] { --load-delay: calc(var(--load-base-delay) + 0.5s); }
[aa-load][aa-delay="0.6"] { --load-delay: calc(var(--load-base-delay) + 0.6s); }
[aa-load][aa-delay="0.7"] { --load-delay: calc(var(--load-base-delay) + 0.7s); }
[aa-load][aa-delay="0.8"] { --load-delay: calc(var(--load-base-delay) + 0.8s); }
[aa-load][aa-delay="0.9"] { --load-delay: calc(var(--load-base-delay) + 0.9s); }
[aa-load][aa-delay="1"] { --load-delay: calc(var(--load-base-delay) + 1s); }
[aa-load][aa-delay="1.1"] { --load-delay: calc(var(--load-base-delay) + 1.1s); }
[aa-load][aa-delay="1.2"] { --load-delay: calc(var(--load-base-delay) + 1.2s); }
[aa-load][aa-delay="1.3"] { --load-delay: calc(var(--load-base-delay) + 1.3s); }
[aa-load][aa-delay="1.4"] { --load-delay: calc(var(--load-base-delay) + 1.4s); }
[aa-load][aa-delay="1.5"] { --load-delay: calc(var(--load-base-delay) + 1.5s); }
[aa-load][aa-delay="1.6"] { --load-delay: calc(var(--load-base-delay) + 1.6s); }
[aa-load][aa-delay="1.7"] { --load-delay: calc(var(--load-base-delay) + 1.7s); }
[aa-load][aa-delay="1.8"] { --load-delay: calc(var(--load-base-delay) + 1.8s); }
[aa-load][aa-delay="1.9"] { --load-delay: calc(var(--load-base-delay) + 1.9s); }
[aa-load][aa-delay="2"] { --load-delay: calc(var(--load-base-delay) + 2s); }

/* Opacity values from 0.1 to 0.9 in 0.1 increments */
[aa-load][aa-opacity="0.1"] { --load-opacity: 0.1; }
[aa-load][aa-opacity="0.2"] { --load-opacity: 0.2; }
[aa-load][aa-opacity="0.3"] { --load-opacity: 0.3; }
[aa-load][aa-opacity="0.4"] { --load-opacity: 0.4; }
[aa-load][aa-opacity="0.5"] { --load-opacity: 0.5; }
[aa-load][aa-opacity="0.6"] { --load-opacity: 0.6; }
[aa-load][aa-opacity="0.7"] { --load-opacity: 0.7; }
[aa-load][aa-opacity="0.8"] { --load-opacity: 0.8; }
[aa-load][aa-opacity="0.9"] { --load-opacity: 0.9; }

/* Distance values */
[aa-load][aa-distance="0.5"] { --load-distance: 0.5; }
[aa-load][aa-distance="1.5"] { --load-distance: 1.5; }

/**
 * Stagger Functionality for up to 10 children
 * Only applies to pure aa-load elements (not hybrid with aa-animate)
 * GSAP handles stagger for hybrid elements
 */
[aa-load][aa-stagger]:not([aa-animate]) {
  --load-parent-delay: var(--load-delay, 0s);
}

[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(1) { --load-delay: var(--load-parent-delay); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(2) { --load-delay: calc(var(--load-parent-delay) + var(--load-stagger)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(3) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 2)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(4) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 3)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(5) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 4)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(6) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 5)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(7) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 6)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(8) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 7)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(9) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 8)); }
[aa-load][aa-stagger]:not([aa-animate]) > :nth-child(10) { --load-delay: calc(var(--load-parent-delay) + (var(--load-stagger) * 9)); }

/**
 * Fade Animations
 */
@keyframes fade{from{opacity:0}to{opacity:var(--load-opacity, 1)}}
@keyframes fadeUp{from{opacity:0;transform:translate3d(0,calc(2rem * var(--load-distance)),0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}
@keyframes fadeDown{from{opacity:0;transform:translate3d(0,calc(-2rem * var(--load-distance)),0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}
@keyframes fadeLeft{from{opacity:0;transform:translate3d(calc(2rem * var(--load-distance)),0,0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}
@keyframes fadeRight{from{opacity:0;transform:translate3d(calc(-2rem * var(--load-distance)),0,0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}

[aa-load="fade"], [aa-load="fade"][aa-stagger]:not([aa-animate]) > * { animation-name: fade; }
[aa-load="fade-up"], [aa-load="fade-up"][aa-stagger]:not([aa-animate]) > * { animation-name: fadeUp; }
[aa-load="fade-down"], [aa-load="fade-down"][aa-stagger]:not([aa-animate]) > * { animation-name: fadeDown; }
[aa-load="fade-left"], [aa-load="fade-left"][aa-stagger]:not([aa-animate]) > * { animation-name: fadeLeft; }
[aa-load="fade-right"], [aa-load="fade-right"][aa-stagger]:not([aa-animate]) > * { animation-name: fadeRight; }

/**
 * Slide Animations
 */
@keyframes slideUp{from{opacity:var(--load-opacity, 1);transform:translate3d(0,100%,0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}
@keyframes slideDown{from{opacity:var(--load-opacity, 1);transform:translate3d(0,-100%,0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}
@keyframes slideLeft{from{opacity:var(--load-opacity, 1);transform:translate3d(100%,0,0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}
@keyframes slideRight{from{opacity:var(--load-opacity, 1);transform:translate3d(-100%,0,0)}to{opacity:var(--load-opacity, 1);transform:translate3d(0,0,0)}}

[aa-load="slide-up"], [aa-load="slide-up"][aa-stagger]:not([aa-animate]) > * { animation-name: slideUp; }
[aa-load="slide-down"], [aa-load="slide-down"][aa-stagger]:not([aa-animate]) > * { animation-name: slideDown; }
[aa-load="slide-left"], [aa-load="slide-left"][aa-stagger]:not([aa-animate]) > * { animation-name: slideLeft; }
[aa-load="slide-right"], [aa-load="slide-right"][aa-stagger]:not([aa-animate]) > * { animation-name: slideRight; }

/**
 * Zoom Animations
 */
@keyframes zoomIn{from{opacity:0;transform:scale(0.6)}70%{opacity:var(--load-opacity, 1)}}
@keyframes zoomOut{from{opacity:0;transform:scale(1.1)}70%{opacity:var(--load-opacity, 1)}}
@keyframes zoomInOver{from{opacity:0;transform:scale(0.1)}70%{opacity:var(--load-opacity, 1);transform:scale(1.1)}to{transform:scale(1)}}
@keyframes zoomOutOver{from{opacity:0;transform:scale(1.1)}70%{opacity:var(--load-opacity, 1);transform:scale(0.9)}to{transform:scale(1)}}
@keyframes zoomInOverUp{from{opacity:0;transform:scale(0.1) translate3d(0,1000px,0)}60%{opacity:var(--load-opacity, 1);transform:scale(.5) translate3d(0,-60px,0)}to{transform:scale(1) translate3d(0,0,0)}}
@keyframes zoomInOverDown{from{opacity:0;transform:scale(0.1) translate3d(0,-1000px,0)}60%{opacity:var(--load-opacity, 1);transform:scale(.5) translate3d(0,60px,0)}to{transform:scale(1) translate3d(0,0,0)}}

[aa-load="zoom-in"], [aa-load="zoom-in"][aa-stagger]:not([aa-animate]) > * { animation-name: zoomIn; }
[aa-load="zoom-out"], [aa-load="zoom-out"][aa-stagger]:not([aa-animate]) > * { animation-name: zoomOut; }
[aa-load="zoom-in-over"], [aa-load="zoom-in-over"][aa-stagger]:not([aa-animate]) > * { animation-name: zoomInOver; }
[aa-load="zoom-out-over"], [aa-load="zoom-out-over"][aa-stagger]:not([aa-animate]) > * { animation-name: zoomOutOver; }
[aa-load="zoom-in-over-up"], [aa-load="zoom-in-over-up"][aa-stagger]:not([aa-animate]) > * { animation-name: zoomInOverUp; }
[aa-load="zoom-in-over-down"], [aa-load="zoom-in-over-down"][aa-stagger]:not([aa-animate]) > * { animation-name: zoomInOverDown; }

/**
 * Float Animations
 */

 @keyframes floatUp {from {opacity: 0; transform: translateY(calc(2rem * var(--load-distance)));} 30% {opacity: var(--load-opacity, 1); transform: translateY(calc(-10px * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform: translateY(0);}}
 @keyframes floatDown {from {opacity: 0; transform: translateY(calc(-2rem * var(--load-distance)));} 30% {opacity: var(--load-opacity, 1); transform: translateY(calc(10px * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform: translateY(0);}}
 @keyframes floatRight {from {opacity: 0; transform: translateX(calc(-2rem * var(--load-distance)));} 30% {opacity: var(--load-opacity, 1); transform: translateX(calc(5px * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform: translateX(0);}}
 @keyframes floatLeft {from {opacity: 0; transform: translateX(calc(2rem * var(--load-distance)));} 30% {opacity: var(--load-opacity, 1); transform: translateX(calc(-5px * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform: translateX(0);}}

 [aa-load="float-up"], [aa-load="float-up"][aa-stagger]:not([aa-animate]) > * { animation-name: floatUp; }
 [aa-load="float-down"], [aa-load="float-down"][aa-stagger]:not([aa-animate]) > * { animation-name: floatDown; }
 [aa-load="float-left"], [aa-load="float-left"][aa-stagger]:not([aa-animate]) > * { animation-name: floatLeft; }
 [aa-load="float-right"], [aa-load="float-right"][aa-stagger]:not([aa-animate]) > * { animation-name: floatRight; }

 /**
 * Rotate Animations
 */

 @keyframes rotateBottomRightCCW {from {opacity: 0; transform-origin: bottom right; transform: rotate(calc(5deg * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform-origin: bottom right;}}
 @keyframes rotateBottomRightCW {from {opacity: 0; transform-origin: bottom right; transform: rotate(calc(-5deg * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform-origin: bottom right;}}
 @keyframes rotateBottomLeftCCW {from {opacity: 0; transform-origin: bottom left; transform: rotate(calc(5deg * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform-origin: bottom left;}}
 @keyframes rotateBottomLeftCW {from {opacity: 0; transform-origin: bottom left; transform: rotate(calc(-5deg * var(--load-distance)));} to {opacity: var(--load-opacity, 1); transform-origin: bottom left;}}

 [aa-load="rotate-br-cw"], [aa-load="rotate-br-cw"][aa-stagger]:not([aa-animate]) > * { animation-name: rotateBottomRightCW; }
 [aa-load="rotate-br-ccw"], [aa-load="rotate-br-ccw"][aa-stagger]:not([aa-animate]) > * { animation-name: rotateBottomRightCCW; }
 [aa-load="rotate-bl-cw"], [aa-load="rotate-bl-cw"][aa-stagger]:not([aa-animate]) > * { animation-name: rotateBottomLeftCW; }
 [aa-load="rotate-bl-ccw"], [aa-load="rotate-bl-ccw"][aa-stagger]:not([aa-animate]) > * { animation-name: rotateBottomLeftCCW; }

/*
* Puff in Animations
*/

 @keyframes puffIn {from {opacity: 0; filter: blur(8px); transform: scale(2);} to {opacity: var(--load-opacity, 1);}}
 @keyframes puffInTop {from {opacity: 0; filter: blur(8px); transform: scale(2); transform-origin: top;} to {opacity: var(--load-opacity, 1); transform-origin: top;}}
 @keyframes puffInBottom {from {opacity: 0; filter: blur(8px); transform: scale(2); transform-origin: bottom;} to {opacity: var(--load-opacity, 1); transform-origin: bottom;}}

 [aa-load="puff-in"], [aa-load="puff-in"][aa-stagger]:not([aa-animate]) > * { animation-name: puffIn; }
 [aa-load="puff-in-top"], [aa-load="puff-in-top"][aa-stagger]:not([aa-animate]) > * { animation-name: puffInTop; }
 [aa-load="puff-in-bottom"], [aa-load="puff-in-bottom"][aa-stagger]:not([aa-animate]) > * { animation-name: puffInBottom; }

/**
 * Reduced Motion Support
 * When user prefers reduced motion, all animations fallback to simple fade
 * Stagger rules only apply to pure aa-load elements (GSAP handles hybrid)
 */
@media (prefers-reduced-motion: reduce) {
  /* Override all animation names to use fade animation */
  [aa-load], [aa-load][aa-stagger]:not([aa-animate]) > * {
    animation-name: fade !important;
  }
  
  /* Reduce animation duration for better accessibility */
  [aa-load], [aa-load][aa-stagger]:not([aa-animate]) > * {
    animation-duration: 0.3s !important;
    animation-delay: 0s !important;
  }
  
  /* Disable any transform animations that might cause motion */
  [aa-load], [aa-load][aa-stagger]:not([aa-animate]) > * {
    animation-timing-function: ease !important;
  }
}
 